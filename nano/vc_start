#!/usr/bin/env bash

network_name="virtual-cluster"
volume_name="vc-home"
max_compute_id=0
profile_frequency=0

CUR_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CLUSTER_DIR="${CUR_DIR}"
SLURM_MODEL_DIR="$( dirname "${CUR_DIR}" )"

cd $CLUSTER_DIR

profile_frequency=$1

echo "profile frequency level: ${profile_frequency}"

# check if it exists if not clean-up and start new
node_name=head-node
if docker container inspect ${node_name} >/dev/null 2>&1; then
    echo "Can not start because container ${node_name} already exists"
    exit 1
fi
for i in $(seq 0 ${max_compute_id})
do
    node_name=$(printf "compute%03d" $i)
    if docker container inspect ${node_name} >/dev/null 2>&1; then
      echo "Can not start because container ${node_name} already exists"
      exit 1
    fi
done
# docker network create -d bridge virtual-cluster


# create network
if [ "$(docker network ls | grep -c " ${network_name} ")" -ge 1 ]; then
  echo "${network_name} network already created will reuse it"
  echo "To start clean delete it: docker network rm ${network_name}"
else
  docker network create -d bridge \
    --subnet=172.31.0.0/16 \
    --ip-range=172.31.0.0/16 \
    --gateway=172.31.0.254 \
    ${network_name}
fi

# create volume for shared home directories
if [ "$(docker volume ls | grep -c " ${volume_name}$")" -ge 1 ]; then
  echo "${volume_name} network already created will reuse it"
  echo "To start clean delete it: docker volume rm ${volume_name}"
else
  docker volume create ${volume_name}
fi

if [ "${profile_frequency}" == 1 ]; then
  mount_volumes="-v ${SLURM_MODEL_DIR}:/slurm_model -v ${CLUSTER_DIR}/profile_10s/etc:/etc/slurm -v /scratch:/scratch \
    -v vc_home:/home \
    -v ${CLUSTER_DIR}/vctools:/vctools \
    -v ${SLURM_MODEL_DIR}/apps:/usr/local/apps \
    -v ${CLUSTER_DIR}/bin:/usr/local/bin/ \
    -v /sacct_log:/sacct_log"

elif [ "${profile_frequency}" == 2 ]; then
    mount_volumes="-v ${SLURM_MODEL_DIR}:/slurm_model -v ${CLUSTER_DIR}/profile_20s/etc:/etc/slurm -v /scratch:/scratch \
    -v vc_home:/home \
    -v ${CLUSTER_DIR}/vctools:/vctools \
    -v ${SLURM_MODEL_DIR}/apps:/usr/local/apps \
    -v ${CLUSTER_DIR}/bin:/usr/local/bin/ \
    -v /sacct_log:/sacct_log"

elif [ "${profile_frequency}" == 3 ]; then
    mount_volumes="-v ${SLURM_MODEL_DIR}:/slurm_model -v ${CLUSTER_DIR}/profile_30s/etc:/etc/slurm -v /scratch:/scratch \
    -v vc_home:/home \
    -v ${CLUSTER_DIR}/vctools:/vctools \
    -v ${SLURM_MODEL_DIR}/apps:/usr/local/apps \
    -v ${CLUSTER_DIR}/bin:/usr/local/bin/ \
    -v /sacct_log:/sacct_log"
else
  mount_volumes="-v ${SLURM_MODEL_DIR}:/slurm_model -v ${CLUSTER_DIR}/profile_none/etc:/etc/slurm -v /scratch:/scratch \
    -v vc_home:/home \
    -v ${CLUSTER_DIR}/vctools:/vctools \
    -v ${SLURM_MODEL_DIR}/apps:/usr/local/apps \
    -v ${CLUSTER_DIR}/bin:/usr/local/bin/ \
    -v /sacct_log:/sacct_log"
fi


# launch head-node in separate terminal
echo "Starting head-node"
 docker run -d --rm -h head-node -p 222:22 -p 2345:2345 --name head-node \
    --network ${network_name} --ip=172.31.0.1 \
    ${mount_volumes} -v /sys/fs/cgroup:/sys/fs/cgroup \
    pseudo/slurm_head_node:latest

  #docker cp /home/nsimakov/Desktop/slurm_model/micro1/bin/innodb.cnf head-node:/etc/my.cnf.d/innodb.cnf

# launch compute-nodes in separate terminal
for i in $(seq 0 ${max_compute_id})
do
    node_name=$(printf "compute%03d" $i)
    ip_addr=$(printf "172.31.0.%d" $(expr 100 + $i))
    if ((i >=100 && i < 200)); then
      ip_addr=$(printf "172.31.1.%d" $(expr 100 - 100 + $i ))
    fi

    if((i >=200 && i< 300));then
      ip_addr=$(printf "172.31.2.%d" $(expr 100 - 200 + $i ))
    fi

    if((i >=300 && i < 400));then
      ip_addr=$(printf "172.31.3.%d" $(expr 100 - 300 + $i ))
    fi

    if((i >=400 && i < 500));then
      ip_addr=$(printf "172.31.4.%d" $(expr 100 - 400 + $i ))
    fi

    if((i >=500 && i< 600));then
      ip_addr=$(printf "172.31.5.%d" $(expr 100 - 500 + $i ))
    fi

    if((i >=600 && i< 700));then
      ip_addr=$(printf "172.31.6.%d" $(expr 100 - 600 + $i ))
    fi

    if((i >=700 && i< 800));then
      ip_addr=$(printf "172.31.7.%d" $(expr 100 - 700 + $i ))
    fi

    if((i >=800 && i< 900));then
      ip_addr=$(printf "172.31.8.%d" $(expr 100 - 800 + $i ))
    fi

    if((i >=900 && i< 1000));then
      ip_addr=$(printf "172.31.9.%d" $(expr 100 - 900 + $i ))
    fi

    echo "Starting ${node_name}"
    docker run   -d --rm -h ${node_name} --name ${node_name}   \
       --network ${network_name} --ip=${ip_addr} \
       ${mount_volumes} -v /sys/fs/cgroup:/sys/fs/cgroup:Z \
       pseudo/slurm_compute_node:latest
done

echo "Done"




