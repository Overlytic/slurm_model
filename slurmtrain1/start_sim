#!/usr/bin/env bash
SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd $SCRIPT_DIR
docker pull nsimakov/slurm_head_node:3
docker pull nsimakov/slurm_compute_node:3
RUN_NAME=srun_010_fifo_1jt
workload=srun_1jt.events
MACHINE_NAME=`hostname`

POSITIONAL=()
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -m|--machine)
      MACHINE_NAME="$2"
      shift # past argument
      shift # past value
      ;;
    -w|--workload)
      workload="$2"
      shift # past argument
      shift # past value
      ;;
    -n|--run-name)
      RUN_NAME="$2"
      shift # past argument
      shift # past value
      ;;
    -h|--help)
      echo "start_sim -m <machine name> -w <workload name> -n <simulation name>"
      echo "    Start virtual cluster simulation (all head) and compute nodes"
      echo "    -m <machine name>. Default: `hostname`"
      echo "    -w <workload name> path to workload events file. Default: small.events"
      echo "    -n <simulation name> default `hostname`"
      echo "    The workload is read from <head node>:/opt/cluster/job_traces/-w <workload name>"
      echo "    The results will be copied to <head node>:/root/results/<machine name>/<simulation name>"
      echo "    each run will be in dtstart_<dtstart>_<replica> sub-directory"
      exit 0
      ;;
    *)    # unknown option
      echo "Unknown arguments!"
      exit 1
      shift # past argument
      ;;
  esac
done

# echo "MACHINE_NAME ${MACHINE_NAME}"
echo "RUN_NAME: ${RUN_NAME}"
echo "workload ${workload}"

# just in case try to remove old run
docker compose stop;docker compose rm -f -s -v

if [ ! -d "./results/${RUN_NAME}" ]
then
  mkdir -p ./results/${RUN_NAME}
fi

# for dtstart in 58 59 68 79 89 99 105 114 126 146
# do
# for replica in 1 2
# do

cd $SCRIPT_DIR
pwd
echo "Start sim: $RUN_NAME"

rm _log/*;sudo rm -rf _compute_nodes_log/* ./_home/*

docker compose up -d

sleep 20

docker exec slurmtrain1-headnode-1 /opt/cluster/slurm_sim_tools/src/slurmsimtools/run_slurm.py \
    -s /usr -e /etc/slurm             \
    -a /opt/cluster/vctools/sacctmgr.script \
    -t /opt/cluster/job_traces/${workload} \
    -r /root/results/${RUN_NAME} -d -v --no-slurmd &> ./results/${RUN_NAME}.out

docker compose stop;docker compose rm -f -s -v
echo Done with sim: $RUN_NAME
#done
# done
rm -rf ./results/${RUN_NAME}/etc ./results/${RUN_NAME}/${workload}
cp -r ./etc ./results/${RUN_NAME}/
cp ./job_traces/${workload} ./results/${RUN_NAME}/
echo Done
